import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import { apiFetch } from "../../../shared";
import "./RegisterPage.css"; // –ò–º–ø–æ—Ä—Ç —Å—Ç–∏–ª–µ–π

export const RegisterPage = () => {
  const [formData, setFormData] = useState({
    role: "",
    username: "",
    name: "",
    email: "",
    password: "",
    password2: "",
  });

  const [error, setError] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const navigate = useNavigate();

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prevData) => ({
      ...prevData,
      [name]: value,
    }));
  };

  const onSubmitHandler = async (e) => {
    e.preventDefault();
    setError("");

    if (formData.password !== formData.password2) {
      setError("–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç");
      return;
    }

    try {
      setIsLoading(true);
      await apiFetch("/register", {
        method: "POST",
        body: JSON.stringify(formData),
        requireAuth: false,
      });

      navigate("/login");
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞:", error);
      setError(error.message || "–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏");
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="register-container">
      <div className="register-box">
        <div className="register-header">
          <h2>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å!</h2>
          <p>–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç</p>
        </div>
        
        {isLoading ? (
          <div className="loader">üíñ</div>
        ) : (
          <form onSubmit={onSubmitHandler} className="register-form">
            {error && <p className="error-message">{error}</p>}
            
            <div className="form-group">
              <label htmlFor="role">–†–æ–ª—å</label>
              <select
                id="role"
                name="role"
                value={formData.role}
                onChange={handleChange}
                required
                className="form-select"
              >
                <option value="" disabled>–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å</option>
                <option value="admin">Admin</option>
                <option value="qa">QA</option>
                <option value="user">User</option>
              </select>
              <span className="input-icon">üëë</span>
            </div>
            
            <div className="form-group">
              <label htmlFor="username">–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</label>
              <input
                id="username"
                name="username"
                type="text"
                placeholder="username"
                value={formData.username}
                onChange={handleChange}
                required
              />
              <span className="input-icon">üë§</span>
            </div>
            
            <div className="form-group">
              <label htmlFor="name">–ü–æ–ª–Ω–æ–µ –∏–º—è</label>
              <input
                id="name"
                name="name"
                type="text"
                placeholder="–í–∞—à–µ –∏–º—è"
                value={formData.name}
                onChange={handleChange}
              />
              <span className="input-icon">üå∏</span>
            </div>
            
            <div className="form-group">
              <label htmlFor="email">Email</label>
              <input
                id="email"
                name="email"
                type="email"
                placeholder="your.email@example.com"
                value={formData.email}
                onChange={handleChange}
                required
              />
              <span className="input-icon">‚úâÔ∏è</span>
            </div>
            
            <div className="form-group">
              <label htmlFor="password">–ü–∞—Ä–æ–ª—å</label>
              <input
                id="password"
                name="password"
                type="password"
                placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                value={formData.password}
                onChange={handleChange}
                required
              />
              <span className="input-icon">üîí</span>
            </div>
            
            <div className="form-group">
              <label htmlFor="password2">–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å</label>
              <input
                id="password2"
                name="password2"
                type="password"
                placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                value={formData.password2}
                onChange={handleChange}
                required
              />
              <span className="input-icon">üîí</span>
            </div>
            
            <button type="submit" className="register-button">
              –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è <span>‚ú®</span>
            </button>
            
            <div className="register-footer">
              <p>–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? <a href="/login">–í–æ–π—Ç–∏</a></p>
            </div>
          </form>
        )}
      </div>
    </div>
  );
};
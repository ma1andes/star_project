import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import { useUser, apiFetch } from "../../../shared";
import "./LoginPage.css"; // –ò–º–ø–æ—Ä—Ç —Å—Ç–∏–ª–µ–π

export const LoginPage = () => {
  const [formData, setFormData] = useState({
    email: "",
    password: "",
  });
  const [error, setError] = useState("");
  const { fetchUser } = useUser();
  const [isLoading, setIsLoading] = useState(false);
  const navigate = useNavigate();

  const onSubmitHandler = async (e) => {
    e.preventDefault();
    setError("");

    try {
      setIsLoading(true);
      const data = await apiFetch("/login", {
        method: "POST",
        body: JSON.stringify(formData),
        requireAuth: false,
      });

      localStorage.setItem("auth_token", data.data.auth_token);
      await fetchUser();
      navigate("/product");
    } catch (err) {
      console.error("Login error:", err);
      setError(err.message || "–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞");
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="login-container">
      <div className="login-box">
        <div className="login-header">
          <h2>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h2>
          <p>–í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç</p>
        </div>
        
        {isLoading ? (
          <div className="loader">üíñ</div>
        ) : (
          <form onSubmit={onSubmitHandler} className="login-form">
            {error && <p className="error-message">{error}</p>}
            
            <div className="form-group">
              <label htmlFor="email">Email</label>
              <input
                id="email"
                type="email"
                placeholder="your.email@example.com"
                value={formData.email}
                onChange={(el) =>
                  setFormData({ ...formData, email: el.target.value })
                }
                required
              />
              <span className="input-icon">‚úâÔ∏è</span>
            </div>
            
            <div className="form-group">
              <label htmlFor="password">–ü–∞—Ä–æ–ª—å</label>
              <input
                id="password"
                type="password"
                placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                value={formData.password}
                onChange={(el) =>
                  setFormData({ ...formData, password: el.target.value })
                }
                required
              />
              <span className="input-icon">üîí</span>
            </div>
            
            <button type="submit" className="login-button">
              –í–æ–π—Ç–∏ <span>üå∏</span>
            </button>
            
            <div className="login-footer">
              <p>–ï—â—ë –Ω–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? <a href="/register">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</a></p>
            </div>
          </form>
        )}
      </div>
    </div>
  );
};